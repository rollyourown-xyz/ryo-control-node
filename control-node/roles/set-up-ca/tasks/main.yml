---
# SPDX-FileCopyrightText: 2022 Wilfred Nicoll <xyzroller@rollyourown.xyz>
# SPDX-License-Identifier: GPL-3.0-or-later


# Create a directory for certificate authority files
- name: Create a directory for certificate authority files
  file:
    mode: 0700
    owner: "{{ local_non_root_user }}"
    group: "{{ local_non_root_user }}"
    path: "{{ playbook_dir }}/../configuration/ca"
    state: directory

# Check existence of a previously generated CA private key
- name: Check existence of a previously generated CA private key
  stat:
    path: "{{ playbook_dir }}/../configuration/ca/ca.key"
  register: ca_key_file

# Generate a CA private key
- name: Generate a CA private key
  openssl_privatekey:
    owner: root
    group: root
    path: "{{ playbook_dir }}/../configuration/ca/ca.key"
    state: present
  register: ca_privatekey
  when: not ca_key_file.stat.exists

# Check existence of a previously generated CA CSR
- name: Check existence of a previously generated CA CSR
  stat:
    path: "{{ playbook_dir }}/../configuration/ca/ca.csr"
  register: ca_csr_file

# Generate a certificate authority CSR
- name: Generate a certificate authority CSR
  openssl_csr:
    owner: root
    group: root
    path: "{{ playbook_dir }}/../configuration/ca/ca.csr"
    privatekey_path: "{{ ca_privatekey.filename }}"
    common_name: "Control Node Root CA"
    use_common_name_for_san: false
    organization_name: "rollyourown Control Node CA"
    organizational_unit_name: "Control Node CA"
    basic_constraints:
      - CA:TRUE
      - pathlen:0
    basic_constraints_critical: yes
    key_usage:
      - keyCertSign
      - cRLSign
      - digitalSignature
    key_usage_critical: yes
    state: present
  register: ca_csr
  when: not ca_csr_file.stat.exists

# Check existence of a previously generated CA certificate
- name: Check existence of a previously generated CA certificate
  stat:
    path: "{{ playbook_dir }}/../configuration/ca/ca.crt"
  register: ca_crt_file

# Generate a self-signed CA certificate
- name: Generate a self-signed CA certificate
  openssl_certificate:
    owner: root
    group: root
    path: "{{ playbook_dir }}/../configuration/ca/ca.crt"
    csr_path: "{{ ca_csr.filename }}"
    privatekey_path: "{{ ca_privatekey.filename }}"
    provider: selfsigned
    selfsigned_create_subject_key_identifier: always_create
    selfsigned_not_after: "+36500d"
    state: present
  when: not ca_crt_file.stat.exists


## Add the CA cert as trusted

# Ensure certs directory exists
- name: Ensure certs directory exists
  file:
    path: /usr/local/share/ca-certificates
    state: directory

# Install CA certificate to certs directory
- name: Install CA certificate to certs directory
  copy:
    mode: 0664
    owner: root
    group: root
    dest: "/usr/local/share/ca-certificates/control-node-root-ca.crt"
    src: "{{ playbook_dir }}/../configuration/ca/ca.crt"
    force: yes

# Update certificate index
- name: Update certificate index
  shell:
    cmd: /usr/sbin/update-ca-certificates


