---
# SPDX-FileCopyrightText: 2022 Wilfred Nicoll <xyzroller@rollyourown.xyz>
# SPDX-License-Identifier: GPL-3.0-or-later


## Generate LXD server and client certs for the control node

# Check existence of a previously generated control node LXD server private key
- name: Check existence of a previously generated control node LXD server private key
  stat:
    path: "{{ playbook_dir }}/../configuration/ca/control-node-server.key"
  register: control_node_server_key_file

# Generate a control node LXD server private key
- name: Generate a control node LXD server private key
  openssl_privatekey:
    owner: "{{ local_non_root_user }}"
    group: "{{ local_non_root_user }}"
    path: "{{ playbook_dir }}/../configuration/ca/control-node-server.key"
    state: present
  register: cn_server_privatekey
  when: not control_node_server_key_file.stat.exists

# Check existence of a previously generated control node LXD server CSR
- name: Check existence of a previously generated control node LXD server CSR
  stat:
    path: "{{ playbook_dir }}/../configuration/ca/control-node-server.csr"
  register: control_node_server_csr_file

# Generate a CSR for the control node LXD server
- name: Generate a CSR for the control node LXD server
  openssl_csr:
    owner: "{{ local_non_root_user }}"
    group: "{{ local_non_root_user }}"
    path: "{{ playbook_dir }}/../configuration/ca/control-node-server.csr"
    privatekey_path: "{{ cn_server_privatekey.filename }}"
    common_name: "control.ryo-project"
    organization_name: "rollyourown Control Node"
    organizational_unit_name: "Control Node"
    state: present
  register: cn_server_csr
  when: not control_node_server_csr_file.stat.exists

# Check existence of a previously generated control node LXD server certificate
- name: Check existence of a previously generated control node LXD server certificate
  stat:
    path: "{{ playbook_dir }}/../configuration/ca/control-node-server.crt"
  register: control_node_server_crt_file

# Generate a control node LXD server certificate signed by the CA certificate and key
- name: Generate a control node LXD server certificate signed by the CA certificate and key
  openssl_certificate:
    owner: "{{ local_non_root_user }}"
    group: "{{ local_non_root_user }}"
    path: "{{ playbook_dir }}/../configuration/ca/control-node-server.crt"
    csr_path: "{{ cn_server_csr.filename }}"
    provider: ownca
    ownca_create_subject_key_identifier: always_create
    ownca_path: "{{ playbook_dir }}/../configuration/ca/ca.crt"
    ownca_privatekey_path: "{{ playbook_dir }}/../configuration/ca/ca.key"
    state: present
  when: not control_node_server_crt_file.stat.exists

# Check existence of a previously generated control node LXD client private key
- name: Check existence of a previously generated control node LXD client private key
  stat:
    path: "{{ playbook_dir }}/../configuration/ca/control-node-client.key"
  register: control_node_client_key_file

# Generate a control node LXD client private key
- name: Generate a control node LXD client private key
  openssl_privatekey:
    owner: "{{ local_non_root_user }}"
    group: "{{ local_non_root_user }}"
    path: "{{ playbook_dir }}/../configuration/ca/control-node-client.key"
    state: present
  register: cn_client_privatekey
  when: not control_node_client_key_file.stat.exists

# Check existence of a previously generated control node LXD client CSR
- name: Check existence of a previously generated control node LXD CSR
  stat:
    path: "{{ playbook_dir }}/../configuration/ca/control-node-client.csr"
  register: control_node_client_csr_file

# Generate a CSR for the control node LXD client
- name: Generate a CSR for the control node LXD client
  openssl_csr:
    owner: "{{ local_non_root_user }}"
    group: "{{ local_non_root_user }}"
    path: "{{ playbook_dir }}/../configuration/ca/control-node-client.csr"
    privatekey_path: "{{ cn_client_privatekey.filename }}"
    common_name: "control.ryo-project"
    organization_name: "rollyourown Control Node"
    organizational_unit_name: "Control Node"
    state: present
  register: cn_client_csr
  when: not control_node_client_csr_file.stat.exists

# Check existence of a previously generated control node LXD client certificate
- name: Check existence of a previously generated control node LXD client certificate
  stat:
    path: "{{ playbook_dir }}/../configuration/ca/control-node-client.crt"
  register: control_node_client_crt_file

# Generate a control node LXD client certificate signed by the CA certificate and key
- name: Generate a control node LXD client certificate signed by the CA certificate and key
  openssl_certificate:
    owner: "{{ local_non_root_user }}"
    group: "{{ local_non_root_user }}"
    path: "{{ playbook_dir }}/../configuration/ca/control-node-client.crt"
    csr_path: "{{ cn_client_csr.filename }}"
    provider: ownca
    ownca_create_subject_key_identifier: always_create
    ownca_path: "{{ playbook_dir }}/../configuration/ca/ca.crt"
    ownca_privatekey_path: "{{ playbook_dir }}/../configuration/ca/ca.key"
    state: present
  when: not control_node_client_crt_file.stat.exists


## Add control node client certificate and key

# Copy control node client certificate
- name: Copy control node client certificate
  copy:
    mode: 0664
    owner: "{{ local_non_root_user }}"
    group: "{{ local_non_root_user }}"
    dest: "/home/{{ local_non_root_user }}/snap/lxd/common/config/client.crt"
    src: "{{ playbook_dir }}/../configuration/ca/control-node-client.crt"
    force: yes

# Copy control node client private key
- name: Copy control node client private key
  copy:
    mode: 0600
    owner: "{{ local_non_root_user }}"
    group: "{{ local_non_root_user }}"
    dest: "/home/{{ local_non_root_user }}/snap/lxd/common/config/client.key"
    src: "{{ playbook_dir }}/../configuration/ca/control-node-client.key"
    force: yes


## Add control node server certificate and key

# Copy control node server certificate
- name: Copy control node server certificate
  copy:
    mode: 0644
    owner: root
    group: root
    dest: "/var/snap/lxd/common/lxd/server.crt"
    src: "{{ playbook_dir }}/../configuration/ca/control-node-server.crt"
    force: yes

# Copy control node server private key
- name: Copy control node server private key
  copy:
    mode: 0600
    owner: root
    group: root
    dest: "/var/snap/lxd/common/lxd/server.key"
    src: "{{ playbook_dir }}/../configuration/ca/control-node-server.key"
    force: yes


## Enable PKI mode: copy CA certificate to client and server configuration

# Copy CA certificate to control node server configuration
- name: Copy CA certificate to control node server configuration
  copy:
    mode: 0644
    owner: root
    group: root
    dest: "/var/snap/lxd/common/lxd/server.ca"
    src: "{{ playbook_dir }}/../../ryo-control-node/configuration/ca/ca.crt"
    force: yes

# Copy CA certificate to control node client configuration
- name: Copy CA certificate to control node client configuration
  copy:
    mode: 0644
    owner: root
    group: root
    dest: "/home/{{ local_non_root_user }}/snap/lxd/common/config/client.ca"
    src: "{{ playbook_dir }}/../../ryo-control-node/configuration/ca/ca.crt"
    force: yes
